#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
    int i, pid[4];

    for (i = 0; i < 4; i++) {
        pid[i] = fork();
        if (pid[i] == 0) {
            // Child process
            printf("Child process %d (PID %d):\n", i + 1, getpid());
            switch (i) {
                case 0:
                    // Print odd numbers
                    for (int j = 1; j <= 20; j += 2) {
                        printf("%d ", j);
                    }
                    printf("\n");
                    break;
                case 1:
                    // Print even numbers
                    for (int j = 2; j <= 20; j += 2) {
                        printf("%d ", j);
                    }
                    printf("\n");
                    break;
                case 2:
                    // Print multiples of 3
                    for (int j = 3; j <= 30; j += 3) {
                        printf("%d ", j);
                    }
                    printf("\n");
                    break;
                case 3:
                    // Print multiples of 5
                    for (int j = 5; j <= 50; j += 5) {
                        printf("%d ", j);
                    }
                    printf("\n");
                    break;
                default:
                    break;
            }
            return 0;
        }
    }

    // Parent process
    for (i = 0; i < 4; i++) {
        waitpid(pid[i], NULL, 0);
    }
    printf("Parent process (PID %d) completed.\n", getpid());

    return 0;
}
