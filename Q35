#include <stdio.h>

#define MAX_BLOCKS 16
#define MIN_FILE_SIZE 1

int main() {
    int i, j, n, start_block, end_block, blocks_needed;
    int blocks[MAX_BLOCKS] = {0};

    // Initialize the iNodes blocks as allocated
    for (i = 0; i < 8; i++) {
        blocks[i] = 1;
    }

    // Loop to get input for file allocation
    while (1) {
        printf("Enter the starting block and the number of blocks needed (separated by a space): ");
        scanf("%d %d", &start_block, &blocks_needed);

        if (start_block < 8 || start_block + blocks_needed > MAX_BLOCKS) {
            printf("Invalid block number or file size.\n");
            continue;
        }

        // Check if the blocks are free
        for (i = start_block; i < start_block + blocks_needed; i++) {
            if (blocks[i] == 1) {
                printf("Blocks are not available.\n");
                break;
            }
        }

        // Allocate the blocks if they are free
        if (i == start_block + blocks_needed) {
            for (j = start_block; j < start_block + blocks_needed; j++) {
                blocks[j] = 1;
            }
            printf("Blocks allocated successfully.\n");
        } else {
            // Find next contiguous blocks
            for (i = start_block + blocks_needed; i < MAX_BLOCKS; i++) {
                if (blocks[i] == 0) {
                    end_block = i;
                    break;
                }
            }
            if (i == MAX_BLOCKS) {
                printf("Not enough contiguous blocks available for allocation.\n");
                return 0;
            }
            for (i = start_block; i < end_block; i++) {
                blocks[i] = 1;
            }
            printf("Blocks allocated successfully.\n");
        }
    }

    return 0;
}
